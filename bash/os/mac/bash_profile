
if [ -f $HOME/.bashrc ]; then
      . $HOME/.bashrc
fi

export BASH_SILENCE_DEPRECATION_WARNING=1

export PATH="$HOME/.jenv/bin:$PATH"
eval "$(jenv init -)"


if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi


if [ -f ~/.gpg-agent-info ]; then
  source ~/.gpg-agent-info
  export GPG_AGENT_INFO
else
  if which gpg-agent > /dev/null; then eval $(gpg-agent --daemon --allow-preset-passphrase --write-env-file ~/.gpg-agent-info); fi
fi

# OPAM configuration
#. /Users/f/.opam/opam-init/init.sh > /dev/null 2> /dev/null || true

if [ -f $HOME/.dotfiles/bash/init  ]; then
     . $HOME/.dotfiles/bash/init
fi


DEP_OPENSSL_INCLUDE=`brew --prefix openssl`/include
OPENSSL_INCLUDE_DIR=`brew --prefix openssl`/include

if [ -d $(brew --prefix)/etc/bash_completion.d ]; then
  DIR=$(brew --prefix)/etc/bash_completion.d/
  FILES=`ls $DIR/*.bash`
  for F in $FILES
  do
    . $F
  done
fi

alias vi=nvim
alias vim=nvim

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/f/Workshop/Library/miniconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/Users/f/Workshop/Library/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/Users/f/Workshop/Library/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/Users/f/Workshop/Library/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<


#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="/Users/f/.sdkman"
[[ -s "/Users/f/.sdkman/bin/sdkman-init.sh" ]] && source "/Users/f/.sdkman/bin/sdkman-init.sh"

# >>> coursier install directory >>>
export PATH="$PATH:/Users/f/Library/Application Support/Coursier/bin"
# <<< coursier install directory <<<
export PATH="/usr/local/opt/llvm/bin:$PATH"
