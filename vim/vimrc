" Vim configuration.
" Link or symlink to ~/.vimrc or ~/_vimrc.

set nocompatible                  " Must come first because it changes other options.

silent! call pathogen#helptags()
silent! call pathogen#runtime_append_all_bundles()


syntax enable                     " Turn on syntax highlighting.
filetype plugin indent on         " Turn on file type detection.

runtime keymaps.vim               " Load custom keymaps 
runtime mine.vim                  " Load custom miscelaneous settings 

runtime colors.vim                    " Load custom colors settings 

runtime macros/matchit.vim            " Load the matchit plugin.

set showcmd                           " Display incomplete commands.
set showmode                          " Display the mode you're in.

set backspace=indent,eol,start        " Intuitive backspacing.

set hidden                            " Handle multiple buffers better.

set wildmenu                          " Enhanced command line completion.
set wildmode=list:longest             " Complete files like a shell.

set ignorecase                        " Case-insensitive searching.
set smartcase                         " But case-sensitive if expression contains a capital letter.

"set autoindent                       " always set autoindenting on
"set copyindent                       " copy the previous indentation on autoindenting

set number                            " Show line numbers.
"set relativenumber                   " Show relative line numbers.

set ruler                             
set cursorline                        " Show cursor position.

set incsearch                         " Highlight matches as you type.
set hlsearch                          " Highlight matches.

set scrolloff=0                       " Show X lines of context around the cursor.

set title                             " Set the terminal's title

set visualbell                        " No beeping.

"set nobackup                          " Don't make a backup before overwriting a file.
"set nowritebackup                     " And again.

set directory=$HOME/.vimback//,.      " Keep swap files in one location
set backupdir=$HOME/.vimback//,. 

set history=1000                            " remember more commands and search history
set undolevels=1000                         " use many muchos levels of undo
set wildignore=*.swp,*.bak,*.pyc,*.class,target


" 
set tabstop=2                    " Global tab width.
set shiftwidth=2                 " And again, related.
set softtabstop=2
set expandtab                    " Use spaces instead of tabs

set laststatus=2                  " Show the status line all the time
" Useful status information at bottom of screen
set statusline=[%n]\ %<%.99f\ %h%w%m%r%y\ %{fugitive#statusline()}%{exists('*CapsLockStatusline')?CapsLockStatusline():''}%=%-16(\ %l,%c-%v\ %)%P

set nowrap "do not wrap lines

set linebreak

"set undofile

" Automatic fold settings for specific files. Uncomment to use.
au FileType css  setlocal foldmethod=indent shiftwidth=2 tabstop=2


" For the MakeGreen plugin and Ruby RSpec. Uncomment to use.
"autocmd BufNewFile,BufRead *_spec.rb compiler rspec

au FileType ruby setlocal foldmethod=syntax
au FileType ruby setlocal expandtab
au FileType ruby setlocal softtabstop=2
au FileType ruby setlocal tabstop=2


au FileType scala setlocal expandtab
au FileType scala setlocal softtabstop=2
au FileType scala setlocal tabstop=2
au FileType scala setlocal shiftwidth=2
" au FileType scala setlocal foldmethod=syntax
"au FileType scala setlocal foldmethod=indent shiftwidth=2 tabstop=2

au BufNewFile,BufRead *.sbt setf scala

au BufNewFile,BufRead *.mml setf ocaml

au BufNewFile,BufRead *.ssp setf html
au BufNewFile,BufRead *.scaml setf haml

au FileType php setlocal expandtab
au FileType php setlocal softtabstop=4
au FileType php setlocal tabstop=4
au FileType php setlocal shiftwidth=4

au BufNewFile * silent! 0r $HOME/.vim/templates/%:e.tpl

au FileType python set omnifunc=pythoncomplete#Complete
au FileType javascript set omnifunc=javascriptcomplete#CompleteJS
au FileType html set omnifunc=htmlcomplete#CompleteTags
au FileType css set omnifunc=csscomplete#CompleteCSS
au FileType xml set omnifunc=xmlcomplete#CompleteTags
au FileType php set omnifunc=phpcomplete#CompletePHP
au FileType c set omnifunc=ccomplete#Complete

au FileType ruby,eruby set omnifunc=rubycomplete#Complete
au FileType ruby,eruby let g:rubycomplete_buffer_loading = 1
au FileType ruby,eruby let g:rubycomplete_classes_in_global = 1


set errorformat=%E\ %#[error]\ %#%f:%l:\ %m,%-Z\ %#[error]\ %p^,%-C\ %#[error]\ %m
set errorformat+=,%W\ %#[warn]\ %#%f:%l:\ %m,%-Z\ %#[warn]\ %p^,%-C\ %#[warn]\ %m
set errorformat+=,%-G%.%#

noremap <silent> <Leader>ff :cf target/quickfix/sbt.quickfix<CR>
noremap <silent> <Leader>fn :cn<CR>


augroup AutoMkdir
    autocmd!
    autocmd  BufNewFile  *  :call EnsureDirExists()
augroup END
function! EnsureDirExists ()
    let required_dir = expand("%:h")
    if !isdirectory(required_dir)
        call mkdir(required_dir, 'p')
    endif
endfunction

function UpdateModifiable()
  if !exists("b:setmodifiable")
    let b:setmodifiable = 0
  endif
  if &readonly
    if &modifiable
      setlocal nomodifiable
      let b:setmodifiable = 1
    endif
  else
    if b:setmodifiable
      setlocal modifiable
    endif
  endif
endfunction
autocmd BufReadPost * call UpdateModifiable()

autocmd BufWritePost,WinEnter,BufFilePost * :CtrlPClearAllCaches



