" Vim configuration.
" Link or symlink to ~/.vimrc or ~/_vimrc.

set nocompatible                  " Must come first because it changes other options.

silent! call pathogen#helptags()
silent! call pathogen#runtime_append_all_bundles()


syntax enable                     " Turn on syntax highlighting.
filetype plugin indent on         " Turn on file type detection.

runtime keymaps.vim               " Load custom keymaps 
runtime mine.vim                  " Load custom miscelaneous settings 

runtime colors.vim                " Load custom colors settings 

runtime macros/matchit.vim        " Load the matchit plugin.

set showcmd                       " Display incomplete commands.
set showmode                      " Display the mode you're in.

set backspace=indent,eol,start    " Intuitive backspacing.

set hidden                        " Handle multiple buffers better.

set wildmenu                      " Enhanced command line completion.
set wildmode=list:longest         " Complete files like a shell.

set ignorecase                    " Case-insensitive searching.
set smartcase                     " But case-sensitive if expression contains a capital letter.

"set autoindent                   " always set autoindenting on
"set copyindent                   " copy the previous indentation on autoindenting

set number                        " Show line numbers.
"set relativenumber               " Show relative line numbers.
"
set ruler                         
set cursorline                    " Show cursor position.

set incsearch                     " Highlight matches as you type.
set hlsearch                      " Highlight matches.

set scrolloff=0                   " Show 3 lines of context around the cursor.

set title                         " Set the terminal's title

set visualbell                    " No beeping.


"set nobackup                          " Don't make a backup before overwriting a file.
"set nowritebackup                     " And again.
set directory=$HOME/.vim/backups//,.  " Keep swap files in one location
set backupdir=$HOME/.vim/backups//,. 

set history=1000                            " remember more commands and search history
set undolevels=1000                         " use many muchos levels of undo
set wildignore=*.swp,*.bak,*.pyc,*.class


" 
set tabstop=2                    " Global tab width.
set shiftwidth=2                 " And again, related.
set softtabstop=2
set expandtab                    " Use spaces instead of tabs

set laststatus=2                  " Show the status line all the time
" Useful status information at bottom of screen
set statusline=[%n]\ %<%.99f\ %h%w%m%r%y\ %{fugitive#statusline()}%{exists('*CapsLockStatusline')?CapsLockStatusline():''}%=%-16(\ %l,%c-%v\ %)%P

set nowrap "do not wrap lines

" augroup CommandTExtension
"  autocmd!
"  autocmd FocusGained * CommandTFlush
"  autocmd BufWritePost * CommandTFlush
"augroup END


"set undofile


" Automatic fold settings for specific files. Uncomment to use.
 autocmd FileType ruby setlocal foldmethod=syntax
 autocmd FileType css  setlocal foldmethod=indent shiftwidth=2 tabstop=2


" For the MakeGreen plugin and Ruby RSpec. Uncomment to use.
autocmd BufNewFile,BufRead *_spec.rb compiler rspec

au FileType ruby setlocal expandtab
au FileType ruby setlocal softtabstop=2
au FileType ruby setlocal tabstop=2


au FileType scala setlocal expandtab
au FileType scala setlocal softtabstop=2
au FileType scala setlocal tabstop=2
au FileType scala setlocal shiftwidth=2
" au FileType scala setlocal foldmethod=syntax
au FileType scala setlocal foldmethod=indent shiftwidth=2 tabstop=2

autocmd BufNewFile,BufRead *.sbt setf scala

autocmd BufNewFile,BufRead *.ssp setf html
autocmd BufNewFile,BufRead *.scaml setf haml

au FileType php setlocal expandtab
au FileType php setlocal softtabstop=4
au FileType php setlocal tabstop=4
au FileType php setlocal shiftwidth=4

autocmd BufNewFile * silent! 0r $HOME/.vim/templates/%:e.tpl

autocmd FileType python set omnifunc=pythoncomplete#Complete
autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS
autocmd FileType html set omnifunc=htmlcomplete#CompleteTags
autocmd FileType css set omnifunc=csscomplete#CompleteCSS
autocmd FileType xml set omnifunc=xmlcomplete#CompleteTags
autocmd FileType php set omnifunc=phpcomplete#CompletePHP
autocmd FileType c set omnifunc=ccomplete#Complete

autocmd FileType ruby,eruby set omnifunc=rubycomplete#Complete
autocmd FileType ruby,eruby let g:rubycomplete_buffer_loading = 1
autocmd FileType ruby,eruby let g:rubycomplete_classes_in_global = 1

augroup AutoMkdir
    autocmd!
    autocmd  BufNewFile  *  :call EnsureDirExists()
augroup END
function! EnsureDirExists ()
    let required_dir = expand("%:h")
    if !isdirectory(required_dir)
        call mkdir(required_dir, 'p')
    endif
endfunction

